@page
@model IndexModel
@{
    ViewData["Title"] = "Dijkstra's Algorithm Calculator";
}

<div class="custom-header d-flex flex-column justify-content-center align-items-center">
  <h3>Dijiktra’s Algorithm Calculator</h3>
  <p>Discovering Optimal Routes Through Nodes Using Dijkstra’s Method</p>
</div> 

<div class="calculator-card shadow" id="calculatorCard">
  <!-- Left: Form -->
  <div class="form-section">
    <div class="form-content">
      <h6 class="section-title fs-6">Select Path</h6>
      <form id="pathForm" onsubmit="return false;">
        <label for="fromNode">From Node</label>
        <select id="fromNode" name="fromNode" class="form-select" required>
          <option value="" disabled selected class="placeholder-option">Select</option>
          <option value="A">A</option>
          <option value="B">B</option>
          <option value="C">C</option>
          <option value="D">D</option>
          <option value="E">E</option>
          <option value="F">F</option>
          <option value="G">G</option>
        </select>

        <label for="toNode" class="mt-3">To Node</label>
        <select id="toNode" name="toNode" class="form-select" required>
          <option value="" disabled selected class="placeholder-option">Select</option>
          <option value="A">A</option>
          <option value="B">B</option>
          <option value="C">C</option>
          <option value="D">D</option>
          <option value="E">E</option>
          <option value="F">F</option>
          <option value="G">G</option>
        </select>

        <div class="mt-4 d-flex">
          <button type="reset" class="btn custom-outline-orange">Clear</button>
          <button type="submit" class="btn btn-warning text-white ms-2" style="background-color: #fd7e14; border-color: #fd7e14;">
            Calculate <i class="fa fa-calculator ms-1 white-icon"></i>
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Right: Image / Result toggle -->
  <div class="right-side">
    <div class="image-section">
      <img src="~/images/man1.png" alt="Illustration" />
    </div>

    <div id="result-Container">
      <h6 class="section-title smaller-heading">Result</h6>
      <div id="resultBox" class="p-3 bg-light border rounded"></div>
    </div>
  </div>
</div>

<script>
  const graph = {
    A: { B: 1, C: 4 },
    B: { C: 2, D: 5 },
    C: { D: 1 },
    D: { E: 3 },
    E: { F: 2 },
    F: { G: 1 },
    G: {}
  };

  function dijkstra(graph, start, end) {
    const distances = {};
    const prev = {};
    const nodes = new Set(Object.keys(graph));

    for (const node of nodes) {
      distances[node] = Infinity;
      prev[node] = null;
    }
    distances[start] = 0;

    while (nodes.size) {
      let current = [...nodes].reduce((a, b) => distances[a] < distances[b] ? a : b);
      nodes.delete(current);

      if (current === end) break;

      for (const neighbor in graph[current]) {
        const alt = distances[current] + graph[current][neighbor];
        if (alt < distances[neighbor]) {
          distances[neighbor] = alt;
          prev[neighbor] = current;
        }
      }
    }

    const path = [];
    let node = end;
    while (node) {
      path.unshift(node);
      node = prev[node];
    }

    return {
      path,
      distance: distances[end]
    };
  }

  document.getElementById("pathForm").addEventListener("submit", function (e) {
    e.preventDefault();

    const from = document.getElementById("fromNode").value;
    const to = document.getElementById("toNode").value;

    if (!from || !to || from === to) {
      alert("Please select valid and different nodes.");
      return;
    }

    const result = dijkstra(graph, from, to);
    const resultBox = document.getElementById("resultBox");
    const calculatorCard = document.getElementById("calculatorCard");

    if (result.distance !== Infinity) {
      resultBox.innerHTML = `<p class="result-text">From Node Name = "${from}", To Node Name = "${to}": ${result.path.join(", ")}<br/><br/><span class="distance-label">Total Distance: ${result.distance}</span></p>`;
    } else {
      resultBox.innerHTML = `<p class="result-text">No valid path found from ${from} to ${to}.</p>`;
    }

    calculatorCard.classList.add("result-mode");
  });

  document.querySelector("button[type='reset']").addEventListener("click", function () {
    document.getElementById("resultBox").innerHTML = "";
    document.getElementById("calculatorCard").classList.remove("result-mode");
  });
</script>
